- name: Create user {{ item["name"] }}
  block:
    - name: Create user
      ansible.builtin.user:
        name: '{{ item["name"] }}'
        append: true
        groups: '{{ item["groups"] }}'
        password: "*"
        create_home: true
        state: '{{ item["state"] }}'
      become: true

    - name: Delete password for {{ item["name"] }}
      ansible.builtin.command: passwd --delete {{ item["name"] }}
      become: true

    - name: Expire password for {{ item["name"] }}
      ansible.builtin.command: passwd --expire {{ item["name"] }}
      become: true
  when: item["name"] not in getent_passwd.keys()

- name: Create authorized_keys file for {{ item["name"] }}
  block:
    - name: Add .ssh folder
      ansible.builtin.file:
        path: /home/{{ item["name"] }}/.ssh
        state: directory
        mode: '0755'
        owner: '{{ item["name"] }}'
        group: '{{ item["name"] }}'
      become: true

    - name: Add authorized_keys file
      ansible.builtin.template:
        src: ../files/authorized_keys
        dest: /home/{{ item["name"] }}/.ssh/authorized_keys
        mode: '0644'
        owner: '{{ item["name"] }}'
        group: '{{ item["name"] }}'
      become: true
  when:
    - item["state"] == "present"
    - item["ssh_keys"] is defined
    - item["ssh_keys"] is iterable
    - item["ssh_keys"] | length > 0

- name: Set up shell for {{ item["name"] }}
  block:
    - name: Install omz as {{ item["name"] }}
      ansible.builtin.command: chsh --shell $(which zsh) {{ item["name"] }}
      become: true

    - name: Install omz as {{ item["name"] }}
      ansible.builtin.command: runuser -l {{ item["name"] }} -c 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended'
      become: true

    - name: Replace zshrc for {{ item["name"] }}
      ansible.builtin.template:
        src: ../files/.zshrc
        dest: /home/{{ item["name"] }}/.zshrc
        mode: '0644'
        owner: '{{ item["name"] }}'
        group: '{{ item["name"] }}'
      become: true

  #when: item["name"] not in getent_passwd.keys()